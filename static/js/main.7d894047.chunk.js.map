{"version":3,"sources":["components/Guess/Guess.module.css","components/Footer/Footer.module.css","components/UI/Modal.module.css","components/Header/Header.module.css","components/Answer/Answer.module.css","App.module.css","components/Puzzle/ShowPuzzle.module.css","data.js","components/UI/Card.module.css","components/UI/Button.module.css","components/Header/Header.js","components/UI/Card.js","components/Puzzle/ShowPuzzle.js","components/UI/Button.js","components/UI/Modal.js","components/Guess/Guess.js","components/Answer/Answer.js","components/Footer/Footer.js","App.js","index.js"],"names":["module","exports","puzzles","Header","Fragment","className","styles","header","title","content","text","Card","props","card","children","ShowPuzzle","puzzle","word1","word2","word3","spacer1","repeat","length","spacer2","spacer3","divider","container","Button","type","button","onClick","disabled","Modal","backdrop","onConfirm","modal","message","actions","Guess","letters","checkAnswer","answer","useState","guess","setGuess","error","setError","useEffect","start","forEach","letter","isValid","console","log","values","Object","Set","size","guessForm","onSubmit","e","preventDefault","selectBoxes","options","Array","keys","map","el","oneSelect","htmlFor","select","name","custom","value","onChange","oldGuess","Number","target","i","focus","Answer","Footer","newPuzzle","solvePuzzle","footer","inner","href","github","icon","faGithub","wordToNum","word","num","charAt","toString","App","setPuzzle","setLetters","showModal","setShowModal","setAnswer","winText","loseText","handleNewPuzzle","elements","chosen","Math","floor","random","j","char","indexOf","push","sort","get_letters","row","result","words","slice","solution","Map","usedVal","leadChar","WORDS_COUNT","MAX_WORD_LEN","add","helper","digit","wordIndex","carry","resultNum","resultChar","isUsed","has","get","set","delete","index","solver","fromEntries","solved","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d894047.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Guess_container__aGOYe\",\"guess\":\"Guess_guess__3G4OT\",\"guessForm\":\"Guess_guessForm__2cc-Z\",\"selectBoxes\":\"Guess_selectBoxes__Td0sl\",\"oneSelect\":\"Guess_oneSelect__3qJuj\",\"custom\":\"Guess_custom__2HHDD\",\"select\":\"Guess_select__3-yOa\",\"focus\":\"Guess_focus__2qBdB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\",\"inner\":\"Footer_inner__28Rmf\",\"button\":\"Footer_button__15E7t\",\"github\":\"Footer_github__2uIUH\",\"text\":\"Footer_text__BdXqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"header\":\"Modal_header__b50LG\",\"content\":\"Modal_content__3zUnK\",\"actions\":\"Modal_actions__1JvhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"title\":\"Header_title__3SH2Q\",\"content\":\"Header_content__1rjeP\",\"text\":\"Header_text__G3J9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Answer_container__2b0jO\",\"answer\":\"Answer_answer__1siiv\",\"text\":\"Answer_text__3JHTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"App_row__1s1ax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ShowPuzzle_container__1VL_P\",\"puzzle\":\"ShowPuzzle_puzzle__3gi1u\"};","module.exports.puzzles = [\n  ['SHUT', 'UP', 'PETE'],\n  ['KEEP', 'QUIET', 'ARTHUR'],\n  ['BASE', 'BALL', 'GAMES'],\n  ['NUMBER', 'NUMBER', 'PUZZLE'],\n  ['HACK', 'HACKER', 'REBOOT'],\n  ['SEAL', 'SEAL', 'LLAMA'],\n  ['SEND', 'MORE', 'MONEY'],\n  ['APPLE', 'LEMON', 'BANANA'],\n  ['GAMMA', 'SIGMA', 'LAMBDA'],\n  ['SUN', 'FUN', 'SWIM'],\n  ['CROSS', 'ROADS', 'DANGER'],\n  ['GUAVA', 'LEMON', 'ORANGE'],\n  ['CARROT', 'CELERY', 'PARSLEY']\n];\n\n// module.exports.puzzles = [['A', 'A', 'B']];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__6-R6B\"};","import React from 'react';\n\nimport styles from './Header.module.css';\n\nconst Header = () => {\n  return (\n    <React.Fragment>\n      <div className={styles.header}>\n        <h1 className={styles.title}>Cryptarithms</h1>\n      </div>\n      <div className={styles.content}>\n        <p className={styles.text}>\n          Decode the puzzle by replacing the letters in the equation with numbers. Each letter corresponds with one\n          number in the range [0, 9], but not all may appear. All letters of the same type are represented by the same\n          number and no terms may contain a leading zero. All puzzles in this game have only one solution.\n        </p>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport styles from './Card.module.css';\n\nconst Card = props => {\n  return <div className={`${styles.card} ${props.className}`}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Card from '../UI/Card';\n\nimport styles from './ShowPuzzle.module.css';\n\nconst ShowPuzzle = ({ puzzle }) => {\n  const word1 = puzzle[0];\n  const word2 = puzzle[1];\n  const word3 = puzzle[2];\n\n  const spacer1 = ' '.repeat(word3.length - word1.length + 2);\n  const spacer2 = '+' + ' '.repeat(word3.length - word2.length + 1);\n  const spacer3 = ' '.repeat(2);\n  const divider = '-'.repeat(word3.length + 4);\n\n  return (\n    <div className={styles.container}>\n      <Card className={styles.puzzle}>\n        <div>\n          <span>{spacer1 + word1}</span>\n        </div>\n        <div>\n          <span>{spacer2 + word2}</span>\n        </div>\n        <div>\n          <span>{divider}</span>\n        </div>\n        <div>\n          <span>{spacer3 + word3}</span>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default ShowPuzzle;\n","import styles from './Button.module.css';\n\nconst Button = props => {\n  return (\n    <button\n      type={props.type}\n      className={`${styles.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Card from './Card';\nimport Button from './Button';\n\nimport styles from './Modal.module.css';\n\nconst Modal = props => {\n  return (\n    <div>\n      <div className={styles.backdrop} onClick={props.onConfirm} />\n      <Card className={styles.modal}>\n        <header className={styles.header}>\n          <h2>{props.title}</h2>\n        </header>\n        <div className={styles.content}>\n          <p>{props.message}</p>\n        </div>\n        <footer className={styles.actions}>\n          <Button onClick={props.onConfirm}>OK</Button>\n        </footer>\n      </Card>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\n\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport Modal from '../UI/Modal';\n\nimport styles from './Guess.module.css';\n\nconst Guess = ({ letters, checkAnswer, answer }) => {\n  const [guess, setGuess] = useState({});\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    const start = {};\n    letters.forEach(letter => {\n      start[letter] = 0;\n    });\n    setGuess(start);\n  }, [letters]);\n\n  const selectBoxes = answer => {\n    const options = [...Array(10).keys()];\n    return letters.map(el => {\n      return (\n        <div className={styles.oneSelect} key={el}>\n          <label htmlFor={el}>{el}:</label>\n          <div className={styles.select}>\n            <select\n              name={el}\n              className={styles.custom}\n              value={guess[el]}\n              disabled={answer ? true : false}\n              onChange={e => {\n                setGuess(oldGuess => ({ ...oldGuess, [el]: Number(e.target.value) }));\n              }}\n            >\n              {options.map(i => {\n                return (\n                  <option key={i} value={i}>\n                    {i}\n                  </option>\n                );\n              })}\n            </select>\n            <span className={styles.focus}></span>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const handleSumbit = e => {\n    e.preventDefault();\n    if (!isValid()) {\n      setError({\n        title: 'Invalid Input',\n        message: 'Assign Each Letter a Different Number.'\n      });\n      return;\n    }\n    checkAnswer(guess);\n  };\n\n  const isValid = () => {\n    console.log(guess);\n    const values = Object.values(guess);\n    return new Set(values).size === values.length;\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <React.Fragment>\n      {error && <Modal title={error.title} message={error.message} onConfirm={errorHandler} />}\n\n      <div className={styles.container}>\n        <Card className={styles.guess}>\n          <h2>Assign Values:</h2>\n          <form className={styles.guessForm} onSubmit={handleSumbit}>\n            <div className={styles.selectBoxes}>{selectBoxes(answer)}</div>\n            <Button type='submit' disabled={answer ? true : false}>\n              Go!\n            </Button>\n          </form>\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Guess;\n","import React from 'react';\n\nimport Card from '../UI/Card';\n\nimport styles from './Answer.module.css';\n\nconst Answer = ({ answer }) => {\n  const word1 = answer[0];\n  const word2 = answer[1];\n  const word3 = answer[2];\n\n  const spacer1 = ' '.repeat(word3.length - word1.length + 2);\n  const spacer2 = '+' + ' '.repeat(word3.length - word2.length + 1);\n  const spacer3 = ' '.repeat(2);\n  const divider = '-'.repeat(word3.length + 4);\n\n  return (\n    <div className={styles.container}>\n      <Card className={styles.answer}>\n        <h2 className={styles.title}>Answer:</h2>\n        <div className={styles.text}>\n          <div>\n            <span>{spacer1 + word1}</span>\n          </div>\n          <div>\n            <span>{spacer2 + word2}</span>\n          </div>\n          <div>\n            <span>{divider}</span>\n          </div>\n          <div>\n            <span>{spacer3 + word3}</span>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Answer;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport Button from '../UI/Button';\n\nimport styles from './Footer.module.css';\n\nconst Footer = ({ newPuzzle, solvePuzzle, answer }) => {\n  return (\n    <React.Fragment>\n      <div className={styles.footer}>\n        <div className={styles.inner}>\n          <Button onClick={newPuzzle} className={styles.button}>\n            New Puzzle\n          </Button>\n          <Button onClick={solvePuzzle} className={styles.button} disabled={answer ? true : false}>\n            See Answer\n          </Button>\n        </div>\n\n        <a href='https://github.com/kaquino1/cryptarithms' className={styles.github}>\n          <FontAwesomeIcon icon={faGithub} size='2x' /> <span className={styles.text}>GitHub</span>\n        </a>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from './components/Header/Header';\nimport ShowPuzzle from './components/Puzzle/ShowPuzzle';\nimport Guess from './components/Guess/Guess';\nimport Answer from './components/Answer/Answer';\nimport Modal from './components/UI/Modal';\nimport Footer from './components/Footer/Footer';\n\nimport { puzzles } from './data';\nimport styles from './App.module.css';\n\nconst randomNumber = elements => {\n  return Math.floor(Math.random() * elements);\n};\n\nconst get_letters = puzzle => {\n  const letters = [];\n  for (let word of puzzle) {\n    let j = word.length;\n    while (j--) {\n      let char = word.charAt(j);\n      if (letters.indexOf(char) < 0) {\n        letters.push(char);\n      }\n    }\n  }\n  return letters.sort();\n};\n\nconst wordToNum = (word, guess) => {\n  let num = '';\n  for (let i = 0; i <= word.length - 1; i++) {\n    num += guess[word.charAt(i)].toString();\n  }\n  return Number(num);\n};\n\nconst solver = puzzle => {\n  const words = puzzle.slice(0, puzzle.length - 1);\n  const result = puzzle[puzzle.length - 1];\n  const solution = new Map();\n  const usedVal = new Set();\n  const leadChar = new Set(result[0]);\n  const WORDS_COUNT = words.length;\n  const MAX_WORD_LEN = result.length;\n\n  for (let i = 0; i < WORDS_COUNT; ++i) {\n    if (words[i].length > MAX_WORD_LEN) return false;\n    leadChar.add(words[i][0]);\n  }\n  return helper(1, 0, 0);\n\n  function helper(digit, wordIndex, carry) {\n    if (digit > MAX_WORD_LEN) {\n      return true;\n    }\n\n    if (wordIndex === WORDS_COUNT) {\n      const resultNum = carry % 10;\n      const resultChar = result[MAX_WORD_LEN - digit];\n      const isUsed = solution.has(resultChar);\n      if (\n        (!isUsed && usedVal.has(resultNum)) ||\n        (isUsed && solution.get(resultChar) !== resultNum) ||\n        (resultNum === 0 && leadChar.has(resultChar))\n      )\n        return false;\n      usedVal.add(resultNum);\n      solution.set(resultChar, resultNum);\n      if (helper(digit + 1, 0, (carry - resultNum) / 10)) {\n        return true;\n      }\n      !isUsed && usedVal.delete(resultNum) && solution.delete(resultChar);\n      return false;\n    }\n\n    const index = words[wordIndex].length - digit;\n    if (index < 0) return helper(digit, wordIndex + 1, carry);\n    const char = words[wordIndex][index];\n    if (solution.has(char)) return helper(digit, wordIndex + 1, carry + solution.get(char));\n    for (let i = 0; i < 10; ++i) {\n      if (usedVal.has(i) || (i === 0 && leadChar.has(char))) continue;\n      usedVal.add(i);\n      solution.set(char, i);\n      if (helper(digit, wordIndex + 1, carry + i)) {\n        return solution;\n      }\n      usedVal.delete(i);\n      solution.delete(char);\n    }\n\n    return false;\n  }\n};\n\nconst App = props => {\n  const [puzzle, setPuzzle] = useState([]);\n  const [letters, setLetters] = useState([]);\n  const [showModal, setShowModal] = useState();\n  const [answer, setAnswer] = useState();\n\n  const winText = { title: 'Correct!', message: 'Play Again!' };\n  const loseText = { title: 'Incorrect!', message: 'Try Again!' };\n\n  useEffect(() => {\n    handleNewPuzzle();\n  }, []);\n\n  const handleNewPuzzle = () => {\n    const chosen = puzzles[randomNumber(puzzles.length)];\n    setPuzzle(chosen);\n    setLetters(get_letters(chosen));\n    setAnswer(null);\n  };\n\n  const checkAnswer = guess => {\n    console.log(guess);\n    const word1 = wordToNum(puzzle[0], guess);\n    const word2 = wordToNum(puzzle[1], guess);\n    const word3 = wordToNum(puzzle[2], guess);\n    setShowModal(word1 + word2 === word3 ? winText : loseText);\n  };\n\n  const hideModal = () => {\n    setShowModal(null);\n    if (showModal.title === winText.title) {\n      handleNewPuzzle();\n    }\n  };\n\n  const showAnswer = () => {\n    const result = solver(puzzle);\n    const solution = Object.fromEntries(result);\n    const solved = [\n      wordToNum(puzzle[0], solution).toString(),\n      wordToNum(puzzle[1], solution).toString(),\n      wordToNum(puzzle[2], solution).toString()\n    ];\n    setAnswer(solved);\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n\n      {puzzle.length && (\n        <div className={styles.row}>\n          <ShowPuzzle puzzle={puzzle} />\n        </div>\n      )}\n\n      {puzzle.length && (\n        <div className={styles.row}>\n          <Guess puzzle={puzzle} letters={letters} checkAnswer={checkAnswer} answer={answer} />\n        </div>\n      )}\n\n      {showModal && <Modal title={showModal.title} message={showModal.message} onConfirm={hideModal} />}\n\n      {answer && (\n        <div className={styles.row}>\n          <Answer answer={answer} />\n        </div>\n      )}\n\n      <Footer newPuzzle={handleNewPuzzle} solvePuzzle={showAnswer} answer={answer} />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}